{"version":3,"sources":["components/Note.js","App.js","index.js"],"names":["Note","note","content","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","useEffect","console","log","axios","get","then","response","data","length","notesToShow","filter","important","Alert","className","onSubmit","event","preventDefault","type","value","name","onChange","target","map","i","onClick","noteObject","date","Date","toISOString","Math","random","post","res","concat","catch","err","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAQeA,EANF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,6BAAKA,EAAKC,WC6JCC,EA7JH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,OAKgBR,mBAAS,IALzB,mBAKTS,EALS,KAKCC,EALD,OAMgBV,mBAAS,IANzB,mBAMTW,EANS,KAMCC,EAND,KAWhBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IACGC,IAAI,UACJC,MAAK,SAAAC,GACJL,QAAQC,IAAI,qBACZb,EAASiB,EAASC,WAErB,IAEHN,QAAQC,IAAI,SAAUd,EAAMoB,OAAQ,SASpC,IAwBMC,EAAcjB,EAChBJ,EACAA,EAAMsB,QAAO,SAAA1B,GAAI,OAAIA,EAAK2B,aAO1BC,EAAQ,WAEb,MAAqB,KAAlBlB,EAEK,wBAOL,qBAAKmB,UAAU,QAAf,SAEGnB,KAyBL,OACE,gCACE,uCACA,cAACkB,EAAD,IAGE,uBAAME,SArBM,SAACC,GACjBA,EAAMC,iBACNf,QAAQC,IAAI,kBAAmBN,EAAUE,IAmBrC,UACA,2CAEI,uBACAmB,KAAK,OACLC,MAAOtB,EACPuB,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBxB,EAAYwB,EAAOH,aAGjD,2CAEI,uBACAD,KAAK,WACLC,MAAOpB,EACPqB,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAYsB,EAAOH,aAGjD,wBAAQD,KAAK,SAAb,sBAMF,6BACGR,EAAYa,KAAI,SAACtC,EAAMuC,GAAP,OACf,cAAC,EAAD,CAAcvC,KAAMA,GAATuC,QAIX,uBACA,8BACF,yBAAQC,QAAS,kBAAM/B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAKlC,uBAAMsB,SApHM,SAACC,GACfA,EAAMC,iBAEL,IAAMS,EAAa,CAClBxC,QAASK,EACToC,MAAM,IAAIC,MAAOC,cACjBjB,UAAWkB,KAAKC,SAAW,IAE7B3B,IACC4B,KAAK,SAAUN,GACfpB,MAAK,SAAA2B,GAAG,OAAI3C,EAASD,EAAM6C,OAAOD,EAAIzB,MAAOhB,EAAW,QACxD2C,OAAM,SAAAC,GAAG,OAAIxC,EAAgB,kBAAD,OAAmB8B,EAAWxC,QAA9B,sBAAyDmD,YAAW,WAAOzC,EAAgB,MAAM,OAyG5H,UACE,uBACEuB,MAAO5B,EACP8B,SArGiB,SAACL,GACxBxB,EAAWwB,EAAMM,OAAOH,UAsGpB,wBAAQD,KAAK,SAAb,yBCtJRoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtC,IAAMC,IAAI,+BAA+BC,MAAK,SAAAC,GAAQ,OAAIL,QAAQC,IAAII,EAASC,W","file":"static/js/main.d1d06419.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note }) => {\r\n  return (\r\n    <li>{note.content}</li>\r\n  )\r\n}\r\n\r\nexport default Note","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n\n\n\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n\n  console.log('render', notes.length, 'notes')\n\n\n\n\n\n\n//----------------------------------------------------------------------\n\n  const addNote = (event) => {\n    event.preventDefault()\n  \n     const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, }\n\n    axios\n    .post('/notes', noteObject )\n    .then(res => setNotes(notes.concat(res.data), setNewNote('')))\n    .catch(err => setErrorMessage(`Posting Note ='${noteObject.content}' has not done `), setTimeout(() => {setErrorMessage('')}, 5000) )\n  }\n\n\n\n\n//-----------------------------------------------------------------------\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n\n//------------------------------------------------------------------------\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n\n\n\n\n//------------------------------------------------------------------------\nconst Alert = () => {\n\n if(errorMessage === ('')) {\n\n  return <div></div>\n \n }\n \n else {\n\nreturn (\n    <div className='error'>\n      \n      {errorMessage}\n    \n      \n    </div>\n  )\n}\n}\n\n//---------------------------------------------------------------------------\n\nconst handleLogin = (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n  }\n\n\n\n\n\n\n\n\n\n\n//------------------------------------------------------------------------\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Alert/>\n\n\n        <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n\n\n         \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note key={i} note={note} />\n        )}\n      </ul>\n\n          <br/>\n          <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\naxios.get('http://localhost:3003/notes').then(response => console.log(response.data))"],"sourceRoot":""}