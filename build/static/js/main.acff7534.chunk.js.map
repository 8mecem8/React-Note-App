{"version":3,"sources":["components/Note.js","services/login.js","components/setto.js","components/login form.js","components/Togglable.js","components/noteFrom.js","App.js","index.js"],"names":["Note","note","content","loginService","credentials","a","axios","post","response","data","token","setToken","newToken","loginForm","handleLogin","username","password","handleUsernameChange","handlePasswordChange","onSubmit","type","value","name","onChange","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","NoteForm","createNote","newNote","setNewNote","event","preventDefault","important","Math","random","target","App","noteFormRef","useRef","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","useEffect","console","log","get","then","loggedUserJSON","window","localStorage","getItem","undefined","JSON","parse","noteService","addNote","noteObject","current","config","headers","Authorization","res","concat","catch","err","setTimeout","notesToShow","filter","Alert","className","setItem","stringify","removeItem","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acff7534.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note }) => {\r\n  return (\r\n    <li>{note.content}</li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst loginService = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n} \r\n\r\n\r\n\r\nexport default  loginService","export let token = null\r\n\r\n function setToken(newToken)  {\r\n  token = `bearer ${newToken}`\r\n  \r\n}\r\n\r\n\r\n\r\nexport default setToken","import React from 'react'\r\n\r\n\r\nconst loginForm = ({handleLogin,username,password,handleUsernameChange,handlePasswordChange}) => {\r\n       \r\n\r\n\r\n    return (\r\n       <form onSubmit={handleLogin}>\r\n\r\n      <div>\r\n      <h2>\r\n        Log in to application\r\n      </h2>      \r\n      </div>\r\n       \r\n\r\n\r\n\r\n        <div>\r\n          username:\r\n            &nbsp;\r\n            <input\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={handleUsernameChange}\r\n        />\r\n        </div>\r\n        <br/>\r\n        <div>\r\n           password:\r\n            &nbsp;\r\n            <input\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    )}\r\n\r\n\r\n      export default loginForm\r\n\r\n\r\n\r\n\r\n      ","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n\r\n\r\nuseImperativeHandle (ref,() => {\r\n\r\n    return {toggleVisibility}\r\n\r\n})\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import React, {useState} from 'react'\r\n\r\n\r\n\r\n const NoteForm = ({createNote}) => {\r\n const [newNote, setNewNote] = useState('')\r\n\r\nconst handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n\r\nconst addNote = (event) => {\r\n    event.preventDefault()\r\n     createNote({\r\n      content: newNote,\r\n      important: Math.random() > 0.5,\r\n    })\r\n\r\n    setNewNote('')\r\n  }\r\n\r\n\r\n\r\n\r\n   return  (\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>   \r\n   \r\n\r\n    )}\r\n\r\n\r\n    export default NoteForm","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport loginService from './services/login'\nimport noteService from './components/setto'\nimport {token} from './components/setto'\nimport LoginForm from './components/login form'\nimport Togglable from './components/Togglable'\nimport NoteForm from './components/noteFrom'\n\n\nconst App = () => {\n  const noteFormRef = useRef()\n  const [notes, setNotes] = useState([]) \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null) //{'name': 'zafer'}\n\n\n\n//-------------------------------------------------------------------\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n\n  \n\n\nuseEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n      if (loggedUserJSON === undefined) {console.log('loggedUserJSON is undefined')}\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService(user.token)\n    }\n  }, [])\n\n\n  //----------------------------------------------------------------------\n\n//console.log('render', notes.length, 'notes')\n\n\n//console.log('token is ====',token)\n\n\n\n//----------------------------------------------------------------------\n\n \n  const addNote = (noteObject) => {\n   // event.preventDefault()\n  \n     /*const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, }*/\n\n          noteFormRef.current.toggleVisibility()\n        \n\n      const config = {\n    headers: { Authorization: token},\n  }\n\n    console.log('config inside of addNote is ==',config )\n\n    axios\n    .post('/notes', noteObject, config )\n    .then(res => setNotes(notes.concat(res.data), /*setNewNote('')*/))\n    .catch(err => setErrorMessage(`Posting Note ='${noteObject.content}' has not done `), setTimeout(() => {setErrorMessage('')}, 5000) )\n  }\n\n\n\n\n//-----------------------------------------------------------------------\n  \n\n\n//------------------------------------------------------------------------\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n\n\n\n\n//------------------------------------------------------------------------\nconst Alert = () => {\n\n if(errorMessage === ('')) {\n\n  return <div></div>\n \n }\n \n else {\n\nreturn (\n    <div className='error'>\n      \n      {errorMessage}\n    \n      \n    </div>\n  )\n}\n}\n\n//---------------------------------------------------------------------------\n\nconst handleLogin = async (event) => {\n    event.preventDefault()\n\n    \n    \n  try {\n      const user = await loginService({username, password,})\n\n          console.log('user in handlelogin ===',user)\n\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n      \n      noteService(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } \n    \n    \n    catch (exception)\n     {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    }\n  }\n\n\n\n//-------------------------------------------------------------------------\n\nconst loginForm = () => (\n    <Togglable buttonLabel='login' >\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleLogin={handleLogin}\n      />\n    </Togglable>\n  )\n\n\n\n\n\n\n//--------------------------------------------------------------------------\n\n\n\n\n//--------------------------------------------------------------------------\n\n const noteForm = () => (\n      <Togglable buttonLabel='Add Note' ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n    )\n\n  \n\n \n\n\n\n//------------------------------------------------------------------------\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Alert/>\n\n      \n        \n      \n      {user === null ?\n         loginForm() :       \n         <div>\n           \n        <p><button onClick={() => {setUser(null); window.localStorage.removeItem('loggedNoteappUser') }}>Log out</button>&nbsp;&nbsp;&nbsp;{user.name} <span>Logged in</span> </p>\n        {noteForm()}\n        </div>\n       }\n\n      <ul>\n        {notesToShow.map((note, i) => \n          <Note key={i} note={note} />\n        )}\n      </ul>\n\n          <br/>\n          <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n\n\n\n\n\n\n\n\n\n\n </div>\n\n\n       \n\n\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\naxios.get('http://localhost:3003/notes').then(response => console.log(response.data))"],"sourceRoot":""}