{"version":3,"sources":["components/Note.js","services/login.js","components/setto.js","App.js","index.js"],"names":["Note","note","content","loginService","credentials","a","axios","post","response","data","token","setToken","newToken","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","console","log","get","then","loggedUserJSON","window","localStorage","getItem","undefined","JSON","parse","noteService","addNote","event","preventDefault","noteObject","date","Date","toISOString","important","Math","random","config","headers","Authorization","res","concat","catch","err","setTimeout","handleNoteChange","target","value","notesToShow","filter","Alert","className","handleLogin","setItem","stringify","onSubmit","type","name","onChange","onClick","removeItem","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89d8f96e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note }) => {\r\n  return (\r\n    <li>{note.content}</li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst loginService = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n} \r\n\r\n\r\n\r\nexport default  loginService","export let token = null\r\n\r\n function setToken(newToken)  {\r\n  token = `bearer ${newToken}`\r\n  \r\n}\r\n\r\n\r\n\r\nexport default setToken","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport loginService from './services/login'\nimport noteService from './components/setto'\nimport {token} from './components/setto'\n\n \n//let token = null\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null) //{'name': 'zafer'}\n\n\n\n\n\n\n//-------------------------------------------------------------------\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n\n  \n\n\nuseEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n      if (loggedUserJSON === undefined) {console.log('loggedUserJSON is undefined')}\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService(user.token)\n    }\n  }, [])\n\n\n  //----------------------------------------------------------------------\n\n//console.log('render', notes.length, 'notes')\n\n\nconsole.log('token is ====',token)\n\n\n\n//----------------------------------------------------------------------\n\n \n\n\n\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n  \n     const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, }\n\n\n\n\n      const config = {\n    headers: { Authorization: token},\n  }\n\n    console.log('config inside of addNote is ==',config )\n\n    axios\n    .post('/notes', noteObject, config )\n    .then(res => setNotes(notes.concat(res.data), setNewNote('')))\n    .catch(err => setErrorMessage(`Posting Note ='${noteObject.content}' has not done `), setTimeout(() => {setErrorMessage('')}, 5000) )\n  }\n\n\n\n\n//-----------------------------------------------------------------------\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n\n//------------------------------------------------------------------------\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n\n\n\n\n//------------------------------------------------------------------------\nconst Alert = () => {\n\n if(errorMessage === ('')) {\n\n  return <div></div>\n \n }\n \n else {\n\nreturn (\n    <div className='error'>\n      \n      {errorMessage}\n    \n      \n    </div>\n  )\n}\n}\n\n//---------------------------------------------------------------------------\n\nconst handleLogin = async (event) => {\n    event.preventDefault()\n    \n  try {\n      const user = await loginService({username, password,})\n\n          console.log('user in handlelogin ===',user)\n\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n      \n      noteService(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } \n    \n    \n    catch (exception)\n     {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n\n//-------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------\n\nconst loginForm = () => (\n        <form onSubmit={handleLogin}>\n\n        <div>\n          username:\n            &nbsp;\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n        />\n        </div>\n        <br/>\n        <div>\n           password:\n            &nbsp;\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n      )\n\n\n\n//--------------------------------------------------------------------------\n\n const noteForm = () => (\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n   \n\n    )\n\n  \n\n \n\n\n\n//------------------------------------------------------------------------\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Alert/>\n\n      \n        \n      \n      {user === null ?\n         loginForm() :       \n         <div>\n           \n        <p><button onClick={() => {setUser(null); window.localStorage.removeItem('loggedNoteappUser') }}>Log out</button>&nbsp;&nbsp;&nbsp;{user.name} <span>Logged in</span> </p>\n        {noteForm()}\n        </div>\n       }\n\n      <ul>\n        {notesToShow.map((note, i) => \n          <Note key={i} note={note} />\n        )}\n      </ul>\n\n          <br/>\n          <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n </div>\n\n\n       \n\n\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\naxios.get('http://localhost:3003/notes').then(response => console.log(response.data))"],"sourceRoot":""}