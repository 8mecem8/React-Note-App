{"version":3,"sources":["components/Note.js","services/login.js","App.js","index.js"],"names":["Note","note","content","login","credentials","a","axios","post","response","data","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","console","log","get","then","length","addNote","event","preventDefault","noteObject","date","Date","toISOString","important","Math","random","res","concat","catch","err","setTimeout","handleNoteChange","target","value","notesToShow","filter","Alert","className","handleLogin","loginService","onSubmit","type","name","onChange","onClick","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAQeA,EANF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,6BAAKA,EAAKC,WCICC,EALJ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWC,IAAMC,KAHf,aAG6BH,GAD/B,cACNI,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDCkNIC,EA3MH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,OAKgBR,mBAAS,IALzB,mBAKTS,EALS,KAKCC,EALD,OAMgBV,mBAAS,IANzB,mBAMTW,EANS,KAMCC,EAND,OAOQZ,mBAAS,MAPjB,mBAOTa,EAPS,KAOHC,EAPG,KAWhBC,qBAAU,WACRC,QAAQC,IAAI,UACZtB,IACGuB,IAAI,UACJC,MAAK,SAAAtB,GACJmB,QAAQC,IAAI,qBACZf,EAASL,EAASC,WAErB,IAEHkB,QAAQC,IAAI,SAAUhB,EAAMmB,OAAQ,SASpC,IAAMC,EAAU,SAACC,GACfA,EAAMC,iBAEL,IAAMC,EAAa,CAClBjC,QAASY,EACTsB,MAAM,IAAIC,MAAOC,cACjBC,UAAWC,KAAKC,SAAW,IAE7BnC,IACCC,KAAK,SAAU4B,GACfL,MAAK,SAAAY,GAAG,OAAI7B,EAASD,EAAM+B,OAAOD,EAAIjC,MAAOM,EAAW,QACxD6B,OAAM,SAAAC,GAAG,OAAI1B,EAAgB,kBAAD,OAAmBgB,EAAWjC,QAA9B,sBAAyD4C,YAAW,WAAO3B,EAAgB,MAAM,OAO1H4B,EAAmB,SAACd,GACxBlB,EAAWkB,EAAMe,OAAOC,QAKpBC,EAAclC,EAChBJ,EACAA,EAAMuC,QAAO,SAAAlD,GAAI,OAAIA,EAAKsC,aAO1Ba,EAAQ,WAEb,MAAqB,KAAlBlC,EAEK,wBAOL,qBAAKmC,UAAU,QAAf,SAEGnC,KAUDoC,EAAW,uCAAG,WAAOrB,GAAP,eAAA5B,EAAA,6DAChB4B,EAAMC,iBADU,kBAIKqB,EAAapD,MAAM,CAACiB,WAAUE,aAJnC,OAIRE,EAJQ,OAMdC,EAAQD,GACRH,EAAY,IACZE,EAAY,IARE,kDAcdJ,EAAgB,qBAChB2B,YAAW,WACT3B,EAAgB,QACf,KAjBW,0DAAH,sDA8Ef,OACE,gCACE,uCACA,cAACiC,EAAD,IAKU,OAAT5B,EA1DC,uBAAMgC,SAAUF,EAAhB,UAEA,iDAGI,uBACAG,KAAK,OACLR,MAAO7B,EACPsC,KAAK,WACLC,SAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgB3B,EAAY2B,EAAOC,aAGjD,uBACA,iDAGI,uBACAQ,KAAK,WACLR,MAAO3B,EACPoC,KAAK,WACLC,SAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOC,aAGjD,wBAAQQ,KAAK,SAAb,sBAqCC,gCAED,8BAAG,wBAAQG,QAAS,WAAOnC,EAAQ,OAAhC,qBAAH,eAA8ED,EAAKkC,KAAnF,IAAyF,6CAAzF,OA9BF,uBAAMF,SAAUxB,EAAhB,UACE,uBACEiB,MAAOnC,EACP6C,SAAUZ,IAEZ,wBAAQU,KAAK,SAAb,wBA8BF,6BACGP,EAAYW,KAAI,SAAC5D,EAAM6D,GAAP,OACf,cAAC,EAAD,CAAc7D,KAAMA,GAAT6D,QAIX,uBACA,8BACF,yBAAQF,QAAS,kBAAM3C,GAAYD,IAAnC,kBACQA,EAAU,YAAc,eCnMxC+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,IAAMuB,IAAI,+BAA+BC,MAAK,SAAAtB,GAAQ,OAAImB,QAAQC,IAAIpB,EAASC,W","file":"static/js/main.f2bff40e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note }) => {\r\n  return (\r\n    <li>{note.content}</li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default login ","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport loginService from './services/login' \n\n\n\n\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null) //{'name': 'zafer'}\n\n\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n\n  console.log('render', notes.length, 'notes')\n\n\n\n\n\n\n//----------------------------------------------------------------------\n\n  const addNote = (event) => {\n    event.preventDefault()\n  \n     const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, }\n\n    axios\n    .post('/notes', noteObject )\n    .then(res => setNotes(notes.concat(res.data), setNewNote('')))\n    .catch(err => setErrorMessage(`Posting Note ='${noteObject.content}' has not done `), setTimeout(() => {setErrorMessage('')}, 5000) )\n  }\n\n\n\n\n//-----------------------------------------------------------------------\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n\n//------------------------------------------------------------------------\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n\n\n\n\n//------------------------------------------------------------------------\nconst Alert = () => {\n\n if(errorMessage === ('')) {\n\n  return <div></div>\n \n }\n \n else {\n\nreturn (\n    <div className='error'>\n      \n      {errorMessage}\n    \n      \n    </div>\n  )\n}\n}\n\n//---------------------------------------------------------------------------\n\nconst handleLogin = async (event) => {\n    event.preventDefault()\n    \n  try {\n      const user = await loginService.login({username, password,})\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } \n    \n    \n    catch (exception)\n     {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n\n//-------------------------------------------------------------------------\n\n\n\nconst loginForm = () => (\n        <form onSubmit={handleLogin}>\n\n        <div>\n          username:\n            &nbsp;\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n        />\n        </div>\n        <br/>\n        <div>\n           password:\n            &nbsp;\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n      )\n\n\n\n//--------------------------------------------------------------------------\n\n const noteForm = () => (\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n   \n\n    )\n\n  \n\n \n\n\n\n//------------------------------------------------------------------------\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Alert/>\n\n      \n        \n      \n      {user === null ?\n         loginForm() :       \n         <div>\n           \n        <p><button onClick={() => {setUser(null)}}>Log out</button>&nbsp;&nbsp;&nbsp;{user.name} <span>Logged in</span> </p>\n        {noteForm()}\n        </div>\n       }\n\n      <ul>\n        {notesToShow.map((note, i) => \n          <Note key={i} note={note} />\n        )}\n      </ul>\n\n          <br/>\n          <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n </div>\n\n\n       \n\n\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\naxios.get('http://localhost:3003/notes').then(response => console.log(response.data))"],"sourceRoot":""}